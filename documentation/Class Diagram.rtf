{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.22621}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\qc\b\f0\fs36\lang9 Class Diagram\b0\fs22\par

\pard\sa200\sl276\slmult1\b >resources\b0\par
\b\tab >application.properties\b0\par
\tab\tab -spring.datasource.url\par
\tab\tab -spring.datasource.username\par
\tab\tab -spring.datasource.password\par
\b >HTD.project.\par
\tab >data\par
\b0\tab\tab\b interface AppUserRepository\b0\par
\tab\tab\tab +public findByUsername(String username) : AppUser\par
\tab\tab\tab +public create(AppUser user) : AppUser \par
\tab\tab\tab +public update(AllUser user) : void\par
\tab\tab\b public AppUserJdbcTemplateRepository implements AppUserRepository\par
\b0\tab\tab\tab -JdbcTemplate jdbcTemplate\par
\tab\tab\tab +updateRoles(AppUser user) : private void\par
\tab\tab\tab +getRolesByUsername(String username) : private List<String>\par
\tab\tab\b Interface ObjectRepository<Object>\b0\par
\tab\tab\tab +readAll() : List<Object>\par
\tab\tab\tab +readById(int id) : Object\par
\tab\tab\tab +create(Object object) : Object\par
\tab\tab\tab +update(Object object): boolean\par
\tab\tab\tab +delete(int objectId) : boolean\par
\tab\tab\b Public ContractorJdbcTemplateRepository implements \tab\tab\tab\tab\tab\tab\tab\tab\tab\tab ObjectRepository<Contractor>\b0\par
\tab\tab\tab -JdbcTemplate jdbcTemplate\par
\tab\tab\tab +ContractorJdbcTemplateRepository(JdbcTemplate)\par
\tab\tab\b Public ClientJdbcTemplateRepository implements \par
\tab\tab\tab\tab\tab\tab\tab ObjectRepository<Client>\par
\b0\tab\tab\tab -JdbcTemplate jdbcTemplate\par
\tab\tab\tab +ClientJdbcTemplateRepository(JdbcTemplate)\par
\tab\tab\b Public InstructorJdbcTemplateRepository implements \par
\tab\tab\tab\tab\tab\tab\tab ObjectRepository<Instructor>\par
\b0\tab\tab\tab -JdbcTemplate jdbcTemplate\par
\tab\tab\tab +InstructorJdbcTemplateRepository(JdbcTemplate)\par
\tab\tab\b Public CohortJdbcTemplateRepository implements \par
\tab\tab\tab\tab\tab\tab\tab ObjectRepository<Cohort>\par
\b0\tab\tab\tab -JdbcTemplate jdbcTemplate\par
\tab\tab\tab +CohortJdbcTemplateRepository(JdbcTemplate)\par
\tab\tab\tab +addContractors(Cohort) : private List<Contractors>\par
\tab\tab\tab +addModules(Cohort) : private List<Modules>\par
\tab\b\tab Public ModuleJdbcTemplateRepository implements \par

\pard\li5040\sa200\sl276\slmult1 ObjectRepository<Module>\par

\pard\sa200\sl276\slmult1\b0\tab\tab\tab -JdbcTemplate jdbcTemplate\par
\tab\tab\tab +ModuleJdbcTemplateRepository(JdbcTemplate)\par

\pard\li1440\sa200\sl276\slmult1\b Interface ContractorCohortModuleRepository\b0\par
\tab +findAll() : List<ContractorCohortModule>\par
\tab +findByContractor\par
\tab +findByCohort\par
\tab +findByModule\par
\tab +Create\par
\tab +Update\par
\tab +deleteByIds(int contractorId, int cohortId, int moduleId)\par
\b Public ContractorCohortModuleJdbcTemplateRepository implements \par

\pard\sa200\sl276\slmult1\tab\tab\tab\tab\tab\tab\tab ContractorCohortModuleRepository\par
\b0\tab\tab\tab -JdbcTemplate jdbcTemplate\par
\tab\tab\tab +ContractorCohortModuleJdbcTemplateRepository(JdbcTemplate)\par
\tab\b\tab >mappers\b0\par
\tab\tab\tab\b Public ContractorMapper implements RowMapper<Contractor>\b0\par
\tab\tab\tab\tab +mapRow(ResultSet, int) : Contractor\par
\tab\tab\tab\b Public ClientMapper implements RowMapper<Client>\b0\par
\tab\tab\tab\tab +mapRow(ResultSet, int) : Client\par
\tab\tab\tab\b Public InstructorMapper implements RowMapper<Instructor>\b0\par
\tab\tab\tab\tab +mapRow(ResultSet, int) : Instructor\par
\tab\tab\tab\b Public CohortMapper implements RowMapper<Cohort>\b0\par
\tab\tab\tab\tab +mapRow(ResultSet, int) : Cohort\par
\tab\tab\tab\b Public ModuleMapper implements RowMapper<Module>\b0\par
\tab\tab\tab\tab +mapRow(ResultSet, int) : Module\par
\tab\tab\tab\b Public ContractorCohortModuleMapper implements \par
\tab\tab\tab\tab\tab\tab RowMapper<ContractorCohortModule>\par
\b0\tab\tab\tab\tab +mapRow(ResultSet, int) ContractorCohortModule\par
\tab\tab\tab\b public AppUserMapper implements RowMapper<AppUser>\b0\par
\tab\tab\tab\tab -List<String> roles\par
\tab\tab\tab\tab +AppUserMapper(List<String> roles)\tab\par
\tab\tab\tab\tab +mapRow(ResultSet, int) : AppUser\par
\b\tab >domains\par
\tab\tab ContractorService\par
\b0\tab\tab\tab -ObjectRepository<Contractor>repository\par

\pard\li2160\sa200\sl276\slmult1 -ObjectRepository<ContractorCohortModule> CCMRepository\par

\pard\sa200\sl276\slmult1\tab\tab\tab +findall():List<Contractor>\par
\tab\tab\tab +findById(ContractorId):Contractor\par
\tab\tab\tab +create(Contractor contractor):Result<Contractor>\par
\tab\tab\tab +update(Contractor contractor):Result<Contractor>\par
\tab\tab\tab +delete(Contractor contractor):Result<Void>\par
\tab\tab\tab +validate(Cohort) : Result<Cohort>\par
\tab\tab\tab +validateDelete(Cohort) : Result<Cohort>\par
\b\tab\tab ClientService\b0\par
\tab\tab\tab -ObjectRepository<Client>repository\par
\tab\tab\tab +findall():List<Client>\par
\tab\tab\tab +findById(ClientId):Client\par
\tab\tab\tab +create(Client client):Result<Client>\par
\tab\tab\tab +update(Client client):Result<Client>\par
\tab\tab\tab +delete(Client client):Result<Client>\par
\tab\tab\tab +validate(Cohort) : Result<Cohort>\par
\par
\tab\tab\b InstructorService\b0\par
\tab\tab\tab -ObjectRepository<Instructor>repository\par
                                    \tab +findall():List<Instructor>\par
\tab\tab\tab +findById(InstructorId):Client\par
\tab\tab\tab +create(Instructor instructor):Result<Instructor>\par
\tab\tab\tab +update(Instructor instructor):Result<Instructor>\par
\tab\tab\tab +delete(Instructor instructor):Result<Instructor>\par
\tab\tab\tab +validate(Cohort) : Result<Cohort>\par
\tab\tab\b CohortService\b0\par
\tab\tab\tab -ObjectRepository<Cohort> repository\par
\tab\tab\tab -ObjectRepository<ContractorCohortModule> CCMRepository\par
\tab\tab\tab +CohortService ( ObjectRepository<Cohort>, \par
\tab\tab\tab\tab\tab ObjectRepository<ContractorCohortModule>)\par
\tab\tab\tab +findAll() : List<Cohort>\par
\tab\tab\tab +findById(CohortId) : Cohort\par
\tab\tab\tab +create(Cohort cohort) : Result<Cohort>\par
\tab\tab\tab +update(Cohort cohort) : Result<Cohort>\par
\tab\tab\tab +delete(int cohortId) : Result<Void>\par
\tab\tab\tab +validate(Cohort) : Result<Cohort>\par
\tab\tab\tab +validateDelete(Cohort) : Result<Cohort>\par
\tab\tab\b ModuleService\b0\par
\tab\tab\tab -ObjectRepository<Module> repository\par
\tab\tab\tab -ContractorCohortModuleRepository CCMRepository\par
\tab\tab\tab +ModuleService(ObjectRepository<Module>, \par
\tab\tab\tab\tab\tab ObjectRepository<ContractroCohortModule>)\par
\tab\tab\tab +findAll() : List<Module>\par
\tab\tab\tab +findById(int moduleId) : Module\par
\tab\tab\tab +create(Module module) : Result<Module>\par
\tab\tab\tab +update(Module module): Result<Module>\par
\tab\tab\tab +delete(int moduleId) : Result<Void>\par
\tab\tab\tab +validate(Module) : Result<Module>\par
\tab\tab\tab +validateDelete(Module) : Result<Module>\par
\tab\tab\b ContractorCohortModuleService\b0\par
\tab\tab\tab -ObjectRepository<ContratorCohortModule> repository\par
\tab\tab\tab +ContractoCohortModuleService\par
\tab\tab\tab\tab\tab\tab (ObjectRepository<ContractorCohortModule>)\par
\tab\tab\tab +findAll() : List<ContractorCohortModule>\par
\tab\tab\tab +findByCohort(int CohortId) : List<ContractorCohortModule>\par
\tab\tab\tab +findByContractor(int contractorId) : List<ContractorCohortModule>\par
\tab\tab\tab +findByModule(int ModuleId) : List<ContractorCohortModule>\par
\tab\tab\tab +create(ContractorCohortModule) : Result<ContractorCohortModule>\par
\tab\tab\tab +update(ContractorCohortModule) : \tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab Result<ContractorCohortModule>\par
\tab\tab\tab +delete(int ContractorId, int CohortId, int ModuleId) : Result<Void>\par
\tab\tab\tab +validate(ContractorCohortModule) : \tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab Result<ContractorCohortModule>\par
\tab\tab\b Result<Payload>\b0\par
\tab\tab\tab -List<String> messages  \par
\tab\tab\tab -Payload payload\par
\tab\tab\tab +public Result()\par
\tab\tab\tab +public addMessage(String) : void\par
\tab\tab\tab +public getMessages() : List<String>\par
\tab\tab\tab +public isSuccessfull() : boolean\par
\tab\tab\tab +public setPayload(Payload) : void\par
\tab\tab\tab +public getPayload() : Payload\par
\b\tab >controllers\par
\tab\tab Public ContractorController\par
\b0\tab\tab\tab -ContractorService service\par
\tab\tab\tab +ContractorController (ContractorService)\par
\tab\tab\tab +findAll() : ResponseEntity<List<Contractor>>\par
\tab\tab\tab +findById(@PathVariable id) : ResponseEntity<Contractor>\par
\tab\tab\tab +add(@RequestBody Contractor) ResponseEntity<Contractor>\par
\tab\tab\tab +update(@PathVariable contractorId, @RequestBody Contractor) : \par
\tab\tab\tab\tab\tab\tab\tab\tab ResponseEntity<Object>\par
\tab\tab\tab +delete (@PathVariable contractorId) ResponseEntity<Void>\par
\tab\tab\b Public ClientController\b0\par
\tab\tab\tab -ClientService service\par
\tab\tab\tab +ClientController(ClientService)\par
\tab\tab\tab +findAll() : ResponseEntity<List<Client>>\par
\tab\tab\tab +findById(@PathVariable int clientId) : ResponseEntity<Client>\par
\tab\tab\tab +add(@RequestBody Client client): ResponseEntity<Client>\par
\tab\tab\tab +Update(@Pathvariable int clientId, @RequestBody Client client) : \par
\tab\tab\tab\tab\tab\tab\tab\tab ResponseEntity<Object>\par
\tab\tab\tab +delete(@Pathvariable int clientId) : ResponseEntity<Object>\par
\tab\tab\b Public InstructorController\b0\par
\tab\tab\tab -InstructorService service\par
\tab\tab\tab +InstructorController(InstructorService)\par
\tab\tab\tab +findAll() : ResponseEntity<List<Instructor>>\par
\tab\tab\tab +findById(@PathVariable int instructorId) : \tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab ResponseEntity<Instructor>\par
\tab\tab\tab +add(@RequestBody Instructor instructor): \tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab ResponseEntity<Instructor>\par
\tab\tab\tab +Update(@Pathvariable int instructorId, \par
\tab\tab\tab @RequestBody Instructor instructor) : ResponseEntity<Object>\par
\tab\tab\tab +delete(@Pathvariable int instructorId) : ResponseEntity<Object>\par
\tab\tab\b Public CohortController\b0\par
\tab\tab\tab -CohortService service\par
\tab\tab\tab +CohortController(CohortService)\par
\tab\tab\tab +findAll() : ResponseEntity<List<Cohort>>\par
\tab\tab\tab +findById(@PathVariable int cohortId) : ResponseEntity<Cohort>\par
\tab\tab\tab +add(@RequestBody Cohort cohort): ResponseEntity<Cohort>\par
\tab\tab\tab +Update(@Pathvariable int cohortId, \par
\tab\tab\tab\tab @RequestBody Cohort cohort) : ResponseEntity<Object>\par
\tab\tab\tab +delete(@Pathvariable int cohortId) : ResponseEntity<Object>\par
\tab\tab\b Public ModuleController\b0\par
\tab\tab\tab -ModuleService service\par
\tab\tab\tab +ModuleController(ModuleService)\par
\tab\tab\tab +findAll() : ResponseEntity<List<Module>>\par
\tab\tab\tab +findById(@PathVariable int moduleId) : ResponseEntity<Module>\par
\tab\tab\tab +add(@RequestBody Module module): ResponseEntity<Module>\par
\tab\tab\tab +Update(@Pathvariable int moduleId, \par
\tab\tab\tab\tab @RequestBody Module module) : ResponseEntity<Object>\par
\tab\tab\tab +delete(@Pathvariable int moduleId) : ResponseEntity<Object>\par
\tab\tab\b Public ContractorCohortModuleController\b0\par
\tab\tab\tab -ContractorCohortModuleService service\par
\tab\tab\tab +ContractorCohortModuleController(\par
\tab\tab\tab\tab\tab\tab\tab ContractorCohortModuleService)\par
\tab\tab\tab +findAll() : ResponseEntity<List<ContractorCohortModule>>\par
\tab\tab\tab +findByCohort(@PathVariable cohortId) : \par
\tab\tab\tab\tab\tab ResponseEntity<List<ContractorCohortModule>>\par
\tab\tab\tab +findByModule(@PathVariable moduleId) : \par
\tab\tab\tab\tab\tab ResponseEntity<List<ContractorCohortModule>>\par
\tab\tab\tab +findByContractor(@PathVariable contractorId) : \par
\tab\tab\tab\tab\tab ResponseEntity<List<ContractorCohortModule>>\par
\tab\tab\tab +add(@RequestBody ContractorCohortModule ccm): \par
\tab\tab\tab\tab\tab\tab\tab\tab ResponseEntity<Object>\par
\tab\tab\tab +Update(@RequestBody ContractorCohortModule ccm) : \par
\tab\tab\tab\tab\tab\tab\tab\tab ResponseEntity<Object>\par
\tab\tab\tab +delete(@RequestBody ContractorCohortModule ccm ) : \par
\tab\tab\tab\tab\tab\tab\tab\tab ResponseEntity<Object>\par
\par
\par
\tab\tab\b public AuthController\b0\par
\tab\tab\tab -AuthenticationManager authenticationManager\par
\tab\tab\tab -JwtConverter converter\par
\tab\tab\tab -AppUserService appUserService\par
\tab\tab\tab +AuthController(AuthenticationManager, JwtController, \tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab AppUserService)\par
\tab\tab\tab +authenticate(@RequestBody Map<String, String> credentials) : \par
\tab\tab\tab\tab\tab\tab\tab ResponseEntity<Map<String, String>>\par
\tab\tab\tab +refreshToken(UsernamePasswordAuthenticationToken principal) : \par
\tab\tab\tab\tab\tab\tab\tab ResponseEntity<Map<String, String>>\par
\tab\tab\tab +createAccount (@RequestBody Map<String, String> credentials) : \par
\tab\tab\tab\tab\tab\tab\tab ResponseEntity<?>\par
\tab\tab\b Public ErrorResponse\b0\par
\tab\tab\tab -LocalDateTime timestamp = LocalDateTime.now\par
\tab\tab\tab -String message\par
\tab\tab\tab +public ErrorResponse(String) \par
\tab\tab\tab +public getMessage() : String\par
\tab\tab\tab +public getTimeStamp() : LocalDateTime\par
\tab\tab\tab +public static build(Result<Obj> result) : ResponseEntity<Object>\par
\tab\tab\b Public GlobalExceptionHandler\b0\par
\tab\tab\tab +public HandleException(Exception) : \tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab ResponseEntity<ErrorResponse>\par
\tab\tab\tab +public HandleException(MethodArgumentMismatchException):\par
\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab ResponseEntity<ErrorResponse>\par
\b >models\par
                       public class Contractor\par
\b0\tab\tab -int contractorId\par
                                 -String firstName \par
\tab\tab -String lastName \par
                                 -Date dateOfBirth\par
                                 -String address \par
                                 -String email \par
                                 -BigDecimal salary\par
                                 -boolean isHired \par
                       \b Public class Client\b0\par
\tab\tab -int clientId\par

\pard\li1440\sa200\sl276\slmult1 -String ClientName\par
-String Clientaddress \par
-int companySize \par
-String email \par

\pard\li720\sa200\sl276\slmult1\b Public class Instructor\b0\par
\tab -int instrucitorId\par
\tab -String firstName \par

\pard\li1440\sa200\sl276\slmult1 -String lastName \par
-int yearsOfExperience \par
-String Expertise \par
-BigDecimal salary\par

\pard\li720\sa200\sl276\slmult1\b Public class Cohort\b0\par

\pard\sa200\sl276\slmult1\tab\tab -int sessionId\par

\pard\li1440\sa200\sl276\slmult1 -Date start_date\par
-Date end_date\par
-Client client\par
-Instructor instructor\par
-List<Contractors>\par
-List<Modules>\par

\pard\li720\sa200\sl276\slmult1\b Public class Module\b0\par

\pard\sa200\sl276\slmult1           \tab\tab  -int moduleId \par
           \tab\tab -String topic \par
          \tab\tab  -Date start_date\par
          \tab\tab  -Date end_date\par
           \tab\tab -int exercise_amount \par
           \tab\tab -int lesson_amount \par

\pard\li720\sa200\sl276\slmult1\b Public class ContractorCohortModule\par

\pard\li1440\sa200\sl276\slmult1\b0 -int ContractorId\par
-int CohortId \par
-int moduleId\par
-BigDecimal grade\par

\pard\sa200\sl276\slmult1\tab\b public AppUser extends User\b0\par
\tab\tab -String AUTHORITY_PREFIX : static final\par
\tab\tab -Int appUserId\par
\tab\tab -List<String> roles\par
\tab\tab +Public AppUser(appuserId, String username, String password, boolean \tab\tab\tab\tab\tab\tab disabled, List<String> Roles) : AppUser\par
\tab\tab +getAppUserId : int\par
\tab\tab +setAppUserId(int id) : void\par
\tab\tab +converRolesToAuthorities(List<String> roles) : List<GrantedAuthority>\par
\tab\tab +converAuthoritiesToRoles(Collection<GrantedAuthority> authorities) : \tab\tab\tab\tab\tab\tab\tab\tab\tab\tab List<String> \par
\b >security\b0\par
\tab\b public AppUserService implements UserDetailsService\b0\par
\tab\tab -AppUserRepository repository\par
\tab\tab -PasswordEncoder encoder\par
\tab\tab +AppUserService(AppUserRepository, PasswordEncoder)\par
\tab\tab +loadUserByUsername(String username) : UserDetails\par
\tab\tab +create(string username, string password) : AppUser\par
\tab\tab +validate(String username) : private void\par
\tab\tab +validatePassword(String password) : private void\par

\pard\li720\sa200\sl276\slmult1\b public JwtConverter\b0\par

\pard\sa200\sl276\slmult1\tab\tab -Key key\par
\tab\tab -String ISSUER\par
\tab\tab -int EXPIRATION_MINUTES\par
\tab\tab -int EXPIRATION_MILLIS\par
\tab\tab +getTokenFromUser(User user) : String\par
\tab\tab +getUserFromToken(String token) : User\par
\tab\b public JwtRequestFilter\b0\par
\tab\tab -JwtConverter converter\par
\tab\tab +JwtRequestFilter(AuthenticationManager, JwtConverter)\par
\tab\tab +doFilterInternal(HttpServletRequest, HttpServletResponse, FilterChain) :\par
\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab Void\par
\tab\b public SecurityConfig\b0\par
\tab\tab -JwtConverter converter\par
\tab\tab +SecurityConfig ( JwtConverter) \par
\tab\tab +Configure(HttpSecurity) : void\par
\tab\tab +AuthenticationManager() : AuthenticationManager (@Bean)\par
\tab\tab +getEncoder() : PasswordEncoder (@Bean)\par
\tab\tab +corsConfigurer: WebMvcConfigurer (@Bean)\par
\b public class App\b0\par
\par
}
 